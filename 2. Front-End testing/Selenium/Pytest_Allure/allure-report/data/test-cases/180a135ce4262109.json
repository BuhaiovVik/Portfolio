{"uid":"180a135ce4262109","name":"Add unvalid address","fullName":"Prada_allure#test16_feng_008_max","historyId":"b079e9fb6e7cd477e565c4fc46a99055","time":{"start":1705207863263,"stop":1705207897130,"duration":33867},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00DF6EE3+174339]\n\t(No symbol) [0x00D20A51]\n\t(No symbol) [0x00A36FF6]\n\t(No symbol) [0x00A69876]\n\t(No symbol) [0x00A69C2C]\n\t(No symbol) [0x00A9BD42]\n\t(No symbol) [0x00A87054]\n\t(No symbol) [0x00A9A104]\n\t(No symbol) [0x00A86DA6]\n\t(No symbol) [0x00A61034]\n\t(No symbol) [0x00A61F8D]\n\tGetHandleVerifier [0x00E94B1C+820540]\n\tsqlite3_dbdata_init [0x00F553EE+653550]\n\tsqlite3_dbdata_init [0x00F54E09+652041]\n\tsqlite3_dbdata_init [0x00F497CC+605388]\n\tsqlite3_dbdata_init [0x00F55D9B+656027]\n\t(No symbol) [0x00D2FE6C]\n\t(No symbol) [0x00D283B8]\n\t(No symbol) [0x00D284DD]\n\t(No symbol) [0x00D15818]\n\tBaseThreadInitThunk [0x7682FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77367C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77367C3E+238]","statusTrace":"setup = None\n\n    @allure.title(\"Add unvalid address\")\n    @allure.tag(\"Negative\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.testcase(\"feng_008\")\n    @pytest.mark.negative\n    def test16_feng_008_max(setup):\n        driver.get(\"https://www.prada.com/us/en/login-register.html\")\n        wait = WebDriverWait(driver, 5)\n    \n        # Login to the account\n        H.login(driver)\n    \n        # Go to the personal information and delete address if it presents\n        driver.find_element(By.XPATH, \"//a[@href='#'][contains(.,'Personal information')]\").click()\n        try:\n            wait.until(EC.element_to_be_clickable((By.XPATH, H.basket_del)))\n            driver.find_element(By.XPATH, H.basket_del).click()\n            wait.until(EC.element_to_be_clickable((By.XPATH, H.delete_confirm)))\n            driver.find_element(By.XPATH, H.delete_confirm).click()\n        except WDE:\n            print(\"Address wasn't create previously\")\n    \n        # Create new address with incorrect phone number\n        wait.until(EC.visibility_of_element_located((By.XPATH, \"//div[contains(text(),'Personal information')]\")))\n        driver.find_element(By.XPATH, '//*[contains(text(),\"Add new shipping address\")]').click()\n        wait.until(EC.visibility_of_element_located((By.XPATH, \"//h3[contains(text(),'Shipping address')]\")))\n        driver.find_element(By.XPATH, \"//input[contains(@id,'first_name_')]\").send_keys(H.f_name)\n        driver.find_element(By.XPATH, \"//input[contains(@id,'last_name_')]\").send_keys(H.l_name)\n        driver.find_element(By.XPATH, \"//input[contains(@id,'company_')]\").send_keys(H.company)\n        time.sleep(3)\n        driver.find_element(By.XPATH, H.address_1).send_keys(H.add)\n        driver.find_element(By.XPATH, \"//input[contains(@id,'city_')]\").send_keys(H.city)\n        driver.find_element(By.XPATH, H.state_dd).click()\n        scroll_to_state = driver.find_element(By.XPATH, H.state_city)\n        driver.execute_script(\"arguments[0].scrollIntoView(true)\", scroll_to_state)\n        wait.until(EC.element_to_be_clickable((By.XPATH, H.state_city)))\n        driver.find_element(By.XPATH, H.state_city).click()\n        driver.find_element(By.XPATH, \"//input[contains(@id,'zip_code_')]\").send_keys(H.zip_code)\n        driver.find_element(By.XPATH, \"//input[contains(@id,'phone_')]\").send_keys(\"000000\")\n        driver.find_element(By.XPATH, H.check_box).click()\n        driver.find_element(By.XPATH, H.confirm).click()\n        try:\n            wait.until(EC.visibility_of_element_located((By.XPATH, '// *[contains(text(), \"The Phone field format is '\n                                                                   'invalid\")]')))\n            print(\"User not abel to create address with incorrect phone number. Test PASS\")\n        except WDE:\n            print(\"User abel to create address with incorrect phone number. Test FALL\")\n>       wait.until(EC.visibility_of_element_located((By.XPATH, '// *[contains(text(), \"The Phone field format is '\n                                                               'invalid\")]')))\n\nPrada_allure.py:802: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9e30c1a0d800cdc7db6d01775db3696d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001ECCE9F7E20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00DF6EE3+174339]\nE       \t(No symbol) [0x00D20A51]\nE       \t(No symbol) [0x00A36FF6]\nE       \t(No symbol) [0x00A69876]\nE       \t(No symbol) [0x00A69C2C]\nE       \t(No symbol) [0x00A9BD42]\nE       \t(No symbol) [0x00A87054]\nE       \t(No symbol) [0x00A9A104]\nE       \t(No symbol) [0x00A86DA6]\nE       \t(No symbol) [0x00A61034]\nE       \t(No symbol) [0x00A61F8D]\nE       \tGetHandleVerifier [0x00E94B1C+820540]\nE       \tsqlite3_dbdata_init [0x00F553EE+653550]\nE       \tsqlite3_dbdata_init [0x00F54E09+652041]\nE       \tsqlite3_dbdata_init [0x00F497CC+605388]\nE       \tsqlite3_dbdata_init [0x00F55D9B+656027]\nE       \t(No symbol) [0x00D2FE6C]\nE       \t(No symbol) [0x00D283B8]\nE       \t(No symbol) [0x00D284DD]\nE       \t(No symbol) [0x00D15818]\nE       \tBaseThreadInitThunk [0x7682FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77367C6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77367C3E+238]\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705207262790,"stop":1705207262873,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"setup","time":{"start":1705207855907,"stop":1705207863262,"duration":7355},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00DF6EE3+174339]\n\t(No symbol) [0x00D20A51]\n\t(No symbol) [0x00A36FF6]\n\t(No symbol) [0x00A69876]\n\t(No symbol) [0x00A69C2C]\n\t(No symbol) [0x00A9BD42]\n\t(No symbol) [0x00A87054]\n\t(No symbol) [0x00A9A104]\n\t(No symbol) [0x00A86DA6]\n\t(No symbol) [0x00A61034]\n\t(No symbol) [0x00A61F8D]\n\tGetHandleVerifier [0x00E94B1C+820540]\n\tsqlite3_dbdata_init [0x00F553EE+653550]\n\tsqlite3_dbdata_init [0x00F54E09+652041]\n\tsqlite3_dbdata_init [0x00F497CC+605388]\n\tsqlite3_dbdata_init [0x00F55D9B+656027]\n\t(No symbol) [0x00D2FE6C]\n\t(No symbol) [0x00D283B8]\n\t(No symbol) [0x00D284DD]\n\t(No symbol) [0x00D15818]\n\tBaseThreadInitThunk [0x7682FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77367C6E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77367C3E+238]","statusTrace":"setup = None\n\n    @allure.title(\"Add unvalid address\")\n    @allure.tag(\"Negative\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.testcase(\"feng_008\")\n    @pytest.mark.negative\n    def test16_feng_008_max(setup):\n        driver.get(\"https://www.prada.com/us/en/login-register.html\")\n        wait = WebDriverWait(driver, 5)\n    \n        # Login to the account\n        H.login(driver)\n    \n        # Go to the personal information and delete address if it presents\n        driver.find_element(By.XPATH, \"//a[@href='#'][contains(.,'Personal information')]\").click()\n        try:\n            wait.until(EC.element_to_be_clickable((By.XPATH, H.basket_del)))\n            driver.find_element(By.XPATH, H.basket_del).click()\n            wait.until(EC.element_to_be_clickable((By.XPATH, H.delete_confirm)))\n            driver.find_element(By.XPATH, H.delete_confirm).click()\n        except WDE:\n            print(\"Address wasn't create previously\")\n    \n        # Create new address with incorrect phone number\n        wait.until(EC.visibility_of_element_located((By.XPATH, \"//div[contains(text(),'Personal information')]\")))\n        driver.find_element(By.XPATH, '//*[contains(text(),\"Add new shipping address\")]').click()\n        wait.until(EC.visibility_of_element_located((By.XPATH, \"//h3[contains(text(),'Shipping address')]\")))\n        driver.find_element(By.XPATH, \"//input[contains(@id,'first_name_')]\").send_keys(H.f_name)\n        driver.find_element(By.XPATH, \"//input[contains(@id,'last_name_')]\").send_keys(H.l_name)\n        driver.find_element(By.XPATH, \"//input[contains(@id,'company_')]\").send_keys(H.company)\n        time.sleep(3)\n        driver.find_element(By.XPATH, H.address_1).send_keys(H.add)\n        driver.find_element(By.XPATH, \"//input[contains(@id,'city_')]\").send_keys(H.city)\n        driver.find_element(By.XPATH, H.state_dd).click()\n        scroll_to_state = driver.find_element(By.XPATH, H.state_city)\n        driver.execute_script(\"arguments[0].scrollIntoView(true)\", scroll_to_state)\n        wait.until(EC.element_to_be_clickable((By.XPATH, H.state_city)))\n        driver.find_element(By.XPATH, H.state_city).click()\n        driver.find_element(By.XPATH, \"//input[contains(@id,'zip_code_')]\").send_keys(H.zip_code)\n        driver.find_element(By.XPATH, \"//input[contains(@id,'phone_')]\").send_keys(\"000000\")\n        driver.find_element(By.XPATH, H.check_box).click()\n        driver.find_element(By.XPATH, H.confirm).click()\n        try:\n            wait.until(EC.visibility_of_element_located((By.XPATH, '// *[contains(text(), \"The Phone field format is '\n                                                                   'invalid\")]')))\n            print(\"User not abel to create address with incorrect phone number. Test PASS\")\n        except WDE:\n            print(\"User abel to create address with incorrect phone number. Test FALL\")\n>       wait.until(EC.visibility_of_element_located((By.XPATH, '// *[contains(text(), \"The Phone field format is '\n                                                               'invalid\")]')))\n\nPrada_allure.py:802: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9e30c1a0d800cdc7db6d01775db3696d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001ECCE9F7E20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00DF6EE3+174339]\nE       \t(No symbol) [0x00D20A51]\nE       \t(No symbol) [0x00A36FF6]\nE       \t(No symbol) [0x00A69876]\nE       \t(No symbol) [0x00A69C2C]\nE       \t(No symbol) [0x00A9BD42]\nE       \t(No symbol) [0x00A87054]\nE       \t(No symbol) [0x00A9A104]\nE       \t(No symbol) [0x00A86DA6]\nE       \t(No symbol) [0x00A61034]\nE       \t(No symbol) [0x00A61F8D]\nE       \tGetHandleVerifier [0x00E94B1C+820540]\nE       \tsqlite3_dbdata_init [0x00F553EE+653550]\nE       \tsqlite3_dbdata_init [0x00F54E09+652041]\nE       \tsqlite3_dbdata_init [0x00F497CC+605388]\nE       \tsqlite3_dbdata_init [0x00F55D9B+656027]\nE       \t(No symbol) [0x00D2FE6C]\nE       \t(No symbol) [0x00D283B8]\nE       \t(No symbol) [0x00D284DD]\nE       \t(No symbol) [0x00D15818]\nE       \tBaseThreadInitThunk [0x7682FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77367C6E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77367C3E+238]\n\n..\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","steps":[],"attachments":[{"uid":"f31e07ae3dcc4cca","name":"stdout","source":"f31e07ae3dcc4cca.txt","type":"text/plain","size":100}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"setup::0","time":{"start":1705207901233,"stop":1705207903542,"duration":2309},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"severity","value":"minor"},{"name":"tag","value":"Negative"},{"name":"tag","value":"negative"},{"name":"suite","value":"Prada_allure"},{"name":"host","value":"DESKTOP-JRRDSU8"},{"name":"thread","value":"18016-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Prada_allure"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"feng_008","url":"feng_008","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["negative","Negative"]},"source":"180a135ce4262109.json","parameterValues":[]}